Subject: [PATCH] Changes
---
Index: test.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test.py b/test.py
--- a/test.py	
+++ b/test.py	
@@ -1,5 +1,7 @@
 import pickle
 import numpy as np
+import h5py
+from scipy.linalg import cholesky, eig, svd, issymmetric, cholesky_banded
 
 def LoadData(name_of_pickle: str):
  pickle_file = open(name_of_pickle, 'rb')  # Mode: read + binary
@@ -7,29 +9,70 @@
  pickle_file.close()
  return data_base
 
-CDERI = LoadData('CDERI')
+THC_ERI = h5py.File('/Users/marcusallen/Documents/GitHub/momentGW/thc_eri_LiH/LiH_111/thc_eri_8.h5','r')
+coll = np.array(THC_ERI['collocation_matrix']).transpose()[0].transpose()
+cou = np.array(THC_ERI['coulomb_matrix'][0]).transpose()[0].T
+decou = cholesky(cou, lower=True)
+e_val, e_vec = eig(cou)
+lambda_root = np.diag(e_val**(0.5))
+decou2 = np.real(e_vec @ lambda_root)
+
+THC_ERI_Or = np.einsum("ip,ap,pq ->qia",coll,coll,decou)
+THC_ERI_Or2 = np.einsum("ip,ap,pq ->qia",coll,coll,decou2)
+THC_or = np.einsum("ip,ap,pq,jq,bq->iajb",coll,coll,cou,coll,coll)
+
+CDERI = LoadData('/Users/marcusallen/Documents/GitHub/momentGW/examples/CDERI')
 THCERI = LoadData('THCERI')
-
 print(CDERI.shape)
-print(THCERI.shape)
-#print(CDERI-THCERI)
-print(CDERI[0][0])
-print('')
-print(THCERI[0][0])
-print(np.mean(CDERI[:88]-THCERI))
-
 two_e_CD = np.einsum('iap,pjb->iajb',CDERI.T,CDERI)
 two_e_THC = np.einsum('pia,pjb->iajb',THCERI,THCERI)
+two_e_THC_or = np.einsum('pia,pjb->iajb',THC_ERI_Or,THC_ERI_Or)
+two_e_THC_or2 = np.einsum('pia,pjb->iajb',THC_ERI_Or2,THC_ERI_Or2)
+print(CDERI[:,:2,2:].shape)
+CD_Lia = np.einsum('pia,qia->pq',CDERI[:,:2,2:],CDERI[:,:2,2:])
+THC_Lia = np.einsum('pia,qia->pq',THCERI[:,:2,2:],THCERI[:,:2,2:])
+# print(np.allclose(CD_Lia,THC_Lia))
+print(np.log(np.linalg.det(np.eye(126) - CD_Lia)))
+print(np.trace(CD_Lia))
+print(np.log(np.linalg.det(np.eye(126) - CD_Lia))+np.trace(CD_Lia))
+# print(np.allclose(two_e_CD,two_e_THC_or))
+
+# print(np.einsum('iap,qia->pq',CDERI.T,CDERI))
+# print(np.diagonal(CDERI))
+# print(np.diagonal(THC_ERI_Or))
+# print(np.trace(CDERI))
+# print(np.trace(THC_ERI_Or))
+# u, s, vh = np.linalg.svd(CDERI.reshape(11, -1))
+# print(np.log(np.linalg.det(np.eye(11) - u)))
+# print(np.sum(s**2))
+# u, s, vh = np.linalg.svd(THC_ERI_Or.reshape(88,-1))
+# print(np.log(np.linalg.det(np.eye(88) - u)))
+# print(np.sum(s**2))
+q = np.einsum('pia,qia->pq',THC_ERI_Or,THC_ERI_Or)
+r = np.einsum('pia,qia->pq',THC_ERI_Or2,THC_ERI_Or2)
+# s = np.einsum("ip,ap,pq,iq,aq->pq",coll,coll,cou,coll,coll)
+t = np.einsum('iap,qia->pq',CDERI.T,CDERI)
+print(np.allclose(q,r))
+# print('')
+# print(np.trace(s))
+# print((t))
+# print(np.log(np.linalg.det(np.eye(88) - s)))
+# print(np.trace(s))
+# print(np.log(np.linalg.det(np.eye(11) - t)))
+# print(np.trace(t))
+# print(np.linalg.det(np.eye(88) - s))
+print('original',np.mean(THC_or-two_e_CD))
+print('decomp chol',np.mean(two_e_THC_or-two_e_CD))
+print('decomp eig',np.mean(two_e_THC_or2-two_e_CD))
+# print('max',np.max(two_e_THC_or-two_e_CD))
+# print('max',np.min(two_e_THC_or-two_e_CD))
+# mse = (np.square(two_e_THC_or - two_e_CD)).mean(axis=None)
+# print('mse - THC vs CDERI', mse)
+# mse2 = (np.square(two_e_THC_or - THC_or)).mean(axis=None)
+# print('mse - THC vs THC', mse2)
+#
+# print('THC',two_e_THC_or[0][0][0][0])
+# print('CD',two_e_CD[0][0][0][0])
 
-print(CDERI[:88].T.shape)
-CD2 = np.dot(CDERI[:88].T,np.transpose(CDERI[:88].T,[0,2,1]))
-THC2 = np.dot(THCERI.T,np.transpose(THCERI.T,[0,2,1]))
-print(np.allclose(CD2,two_e_CD))
-print('')
-print(CD2[0][0])
-print('')
-print(THC2[0][0])
 
-print('')
-print(two_e_CD.shape,two_e_THC.shape)
-print(np.min(CD2-THC2))
+
Index: examples/24-RPA.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/examples/24-RPA.py b/examples/24-RPA.py
--- a/examples/24-RPA.py	
+++ b/examples/24-RPA.py	
@@ -39,6 +39,7 @@
 cderi = lib.unpack_tril(cderi, axis=-1)
 print(cderi.shape)
 mf.with_df = DummyClass(cderi)
+print(mf.with_df.kpts())
 gw_rpa = rpa.RPA(mf)
 gw_rpa.kernel()
 print('HF CDERI, E_rpa',gw_rpa.e_corr)
Index: examples/26-thc_solid.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/examples/26-thc_solid.py b/examples/26-thc_solid.py
--- a/examples/26-thc_solid.py	
+++ b/examples/26-thc_solid.py	
@@ -37,18 +37,14 @@
 cell.precision = 1e-6
 
 kmf = scf.KRKS(cell, kpts)
-kmf = kmf.rs_density_fit(auxbasis='gth-tzvp-molopt-sr')
+kmf = kmf.rs_density_fit()
 kmf.xc = 'pbe'
 kmf.kernel()
 
-print(kmf.with_df.get_naoaux())
-kmf.with_df.get_naoaux() == 22
-
 cderi = list(kmf.with_df.loop())[0]
-print(cderi.shape)
 cderi = lib.unpack_tril(cderi, axis=-1)
-print(cderi.shape)
 StoreData(cderi, 'CDERI')
+kmf._cderi_to_save = 'testing'
 kmf.with_df._cderi2 = cderi
 
 #gw = gw.GW(kmf.to_rhf())
Index: thc_eri_LiH/LiH_111/pyscf_pbe/scf.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/thc_eri_LiH/LiH_111/pyscf_pbe/scf.py b/thc_eri_LiH/LiH_111/pyscf_pbe/scf.py
--- a/thc_eri_LiH/LiH_111/pyscf_pbe/scf.py	
+++ b/thc_eri_LiH/LiH_111/pyscf_pbe/scf.py	
@@ -26,4 +26,4 @@
 kmf.analyze()
 
 
-kmf.with_df.get_naoaux()
+
Index: examples/25-THC_imp.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/examples/25-THC_imp.py b/examples/25-THC_imp.py
--- a/examples/25-THC_imp.py	
+++ b/examples/25-THC_imp.py	
@@ -28,7 +28,7 @@
               H 2.0415 2.0415 2.0415''',
     pseudo = 'gth-pbe',
     basis = 'gth-dzvp-molopt-sr',#'gth-szv',
-    verbose = 10
+    verbose = 4
 )
 
 nk = [1,1,1]
@@ -46,23 +46,12 @@
 THC_ERI = h5py.File(path,'r')
 collocation_matrix = np.array(THC_ERI['collocation_matrix']).transpose()[0].transpose()
 coulomb_matrix = np.array(THC_ERI['coulomb_matrix'][0]).transpose()[0].T
-Eval, Evec = lg.eigh(coulomb_matrix)
-decomp_coulomb = Evec @ np.diag(Eval)**(0.5)
-
-decomp_coulomb3 = cholesky(coulomb_matrix, lower=True)
-cderi = lib.einsum("np,mp,qp->qnm",collocation_matrix,collocation_matrix,decomp_coulomb)
-#StoreData(cderi, 'THCERI')
-cderi3 = lib.einsum("np,mp,qp->qnm",collocation_matrix,collocation_matrix,decomp_coulomb3)
-#StoreData(cderi3, 'THCERI')
+decou = cholesky(coulomb_matrix, lower=True)
+THC_ERI = np.einsum("ip,ap,pq ->qia",collocation_matrix,collocation_matrix,decou)
+StoreData(THC_ERI, 'THCERI')
 
-#cderi2 = list(kmf.with_df.loop())[0]
-#cderi2 = lib.unpack_tril(cderi2, axis=-1)
-#print("1,2",np.allclose(cderi,cderi2))
-#print("1,3",np.allclose(cderi,cderi3))
-#print("2,3",np.allclose(cderi2,cderi3))
 
-
-kmf.with_df._cderi2 = np.ascontiguousarray(cderi3)
+kmf.with_df._cderi2 = np.ascontiguousarray(THC_ERI)
 print(kmf.with_df.get_naoaux())
 
 mgw = GW(kmf)
