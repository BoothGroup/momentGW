[project]
name = "momentGW"
description = "Moment-constrained GW"
keywords = [
    "quantum", "chemistry",
    "electronic", "structure",
    "gw", "theory",
]
readme = "README.md"
requires-python = ">=3.7"
classifiers = [
        "Development Status :: 2 - Pre-Alpha",
        "Intended Audience :: Science/Research",
        "Intended Audience :: Developers",
        "Topic :: Scientific/Engineering",
        "Topic :: Software Development",
        "Programming Language :: Python",
        "Programming Language :: Python :: 3.7",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Operating System :: MacOS :: MacOS X",
        "Operating System :: POSIX :: Linux",
]
dependencies = [
    "numpy>=1.19.0",
    "scipy<=1.10.0",
    "pyscf>=2.0.0",
    "rich>=13.0.0",
    "dyson @ git+https://github.com/BoothGroup/dyson@master",
]
dynamic = [
    "version",
]

[tools.setuptools.dynamic]
version = {attr = "momentGW.__version__"}

[build-system]
requires = [
    "setuptools>=46.1.0",
]
build-backend = "setuptools.build_meta"

[project.optional-dependencies]
dev = [
    "black>=22.6.0",
    "isort>=5.10.1",
    "flake8>=3.8.4",
    "flake8-pyproject>=1.2.3",
    "flake8-bugbear>=23.0.0",
    "flake8-docstrings>=1.6.0",
    "coverage[toml]>=5.5.0",
    "pytest>=6.2.4",
    "pytest-cov>=4.0.0",
    "pytest-env>=1.1.0",
    "pre-commit>=2.15.0",
]
mpi = [
    "mpi4py>=3.1.0",
]

[tool.ruff]
line-length = 100
target-version = "py311"
include = ["pyproject.toml", "momentGW/**/*.py", "tests/**/*.py", "examples/**/*.py"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "I",  # isort
    "D",  # pydocstyle
    "PL", # pylint
]
ignore = [
    "E722",  # bare-except
    "E203",  # Whitespace before ':'
    "E731",  # Do not assign a lambda expression, use a def
    "E741",  # Ambiguous variable name
    "W503",  # Line break before binary operator
    "D200",  # One-line docstring should fit on one line with quotes
    "D202",  # No blank lines allowed after function docstring
    "D205",  # 1 blank line required between summary line and description
    "D400",  # First line should end with a period
    "B007",  # Loop control variable not used within the loop body
    "PLR0911",  # too-many-return-statements
    "PLR0912",  # too-many-branches
    "PLR0913",  # too-many-arguments
    "PLR0915",  # too-many-statements
    "PLR2004",  # magic-value-comparison
    "PLR5501",  # collapsible-else-if
    "PLW2901",  # redefined-loop-name
]

[tool.ruff.lint.per-file-ignores]
"momentGW/__init__.py" = [
    "D205",  # missing-blank-line-after-summary
    "D212",  # multi-line-summary-first-line
    "D415",  # missing-terminal-punctuation
]
"momentGW/**/__init__.py" = [
    "E402",
    "W605",
    "F401",
    "F811",
    "D103"
]
"tests/**/*.py" = [
    "D103",  # undocumented-public-function
    "D101",  # undocumented-public-method
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["momentGW"]

[tool.coverage.run]
branch = true
source = [
    "momentGW",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise NotImplementedError",
    "raise util.ModelNotImplemented",
    "if __name__ == .__main__.:",
]

[tool.coverage.html]
directory = "cov_html"

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
addopts = [
    "--durations=0",
]

[tool.pytest_env]
MOMENTGW_SILENT = 1
